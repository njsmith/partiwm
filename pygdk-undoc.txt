Some undocumented functions in gtk.gdk:
  flush
  x11_get_default_screen
  x11_get_server_time
  x11_grab_server
  x11_register_standard_event_type
  x11_ungrab_server
  window_foreign_new
  error_trap_push
  error_trap_pop

  event_send_client_message_for_display
    ^^ doesn't seem to let you set the mask, though :-(



How gdk/gtk event handling works:
  gdk handles the event, then (via gdk_event_handler_set) passes it on
  to gtk.

  gtk looks up the GtkWidget associated with the GdkWindow in the
  usual get_user_data way, then (for at least PROPERTY_NOTIFY, MAP,
  UNMAP, CONFIGURE, etc., see gtkmain.c:gtk_main_do_event) calls
  gtk_widget_event on that widget, which then emits the 'event'
  signal.  Prototype: gboolean ()(GtkWidget*, GdkEvent*, void *
  user_data).  return value TRUE = stop propagation, FALSE = continue
  processing.

  gtk_widget_event does:
    if the window is no longer visible according to
      (event_window_is_still_viewable) then it discards the event.
    else, emits widget_signals[EVENT] i.e. emits the "event" signal
    if that returns false and WIDGET_REALIZED_FOR_EVENT is true, then
      it looks more carefully and emits one of the *-event signals
    then if WIDGET_REALIZED_FOR_EVENT is true, it emits the
      event-after signal.

  There are 'map', 'map-event', 'configure-event', 'client-event',
  'destroy-event', 'unmap', 'unmap-event' signals.

  "map" is emitted by gtk_widget_map, not by actual mapping.  Likewise
  for "unmap".


Easiest thing might be to use gtk.gdk.event_handler_set to filter
events after they have already been moved into Python, but before any
real processing has been done on them -- passing all the ones I'm not
interested in on to gtk.main_do_event.

def func(event, user_data):
    gtk.main_do_event(event)
gtk.gdk.event_handler_set(func, None)


So: when we want to send an event, we have to go to X directly
  and when we want to read an event that GDK doesn't have (i.e.,
    *Request events), then we go to X directly
  and otherwise we catch stuff between GDK and GTK

This gives us:
  DestroyNotify -- via StructureNotify only, never SubstructureNotify
     (GDK filters)
  MapNotify
  UnmapNotify
  ConfigureNotify -- not for "child" windows (GdkWindow type field),
     not for SubstructureNotify, but yes for StructureNotify on
     foreign windows.  And not for root window, but we there are
     already nice signals for screen resize.
  PropertyNotify
  ClientMessage
