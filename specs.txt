Relevant specifications:
  ICCCM 2.0: 
  EWMH: 
  X protocol spec:

Windows are always positioned in their parent's coordinate space; the
coordinate given is where the upper-left corner will be located.

Gravity is basically about resizing.  "Bit gravity" is, if the window
is resized, which part of its contents should be preserved.  "Win
gravity" is, if the window's parent is resized, how should the
contained window be moved (which point should remain at constant
position relative).  WM gravity hints say (on initial map) how the
window should be moved relative to its requested position to make room
for window decorations, and on later resizes, they say if the size
alone is changed, then which point on the window should remain at a
constant position while everything else stretches/shrinks around it.

Places where the specs do not fully apply in the way they want to:
  -- pretty much all the gravity stuff, because we control position
     absolutely
  -- similarly, all the stuff about which sort of position requests
     should be honored or not (USPosition vs. PPosition, EWMH source
     indication, etc.), because we're not going to honor any of them.
  -- We might want to honor some stacking requests (raise/lower stuff)
  -- We do not support any form of iconified state
  -- Not clear what _NET_FRAME_EXTENTS means for a tiling WM...
  -- EWMH desktop stuff will need some work.  _NET_DESKTOP_LAYOUT will
     just be ignored.  We might want to support _NET_DESKTOP_NAMES,
     but make it readonly for everyone else -- e.g., if a pager tries
     to change it, notice and change it back.  
  -- If/when we get multiple viewport (xinerama) support, the EWMH
     desktop stuff becomes even more useless -- _NET_CURRENT_DESKTOP
     does not make sense when there are multiple desktops.
     _NET_DESKTOP_GEOMETRY does not make sense when there are multiple
     sizes.  What to do?
